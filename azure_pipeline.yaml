# Docs:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    exclude:
    - /modules/azure-landing-zone/*
    - /components/global/*

variables:
  terraformVersion: 0.15.0
  timeoutInMinutes: 60
  agentPool: 'ubuntu-18.04'
  build: $(Build.BuildNumber)
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  action:
  product: 'cft-platform'

parameters:
  - name: environment_components
    type: object
    default:
    - deployment: 'sbox_cftapps_cluster_lb'
      environment: 'sbox'
      component: 'cftapps_cluster_lb'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/cftapps_cluster_lb modules/app-gateway-module environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'sbox_cftapps_cluster_lb_backend'
      environment: 'sbox'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/sbox/backend_lb_config.yaml environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: false

      #CFT AKS Terraform

    - deployment: 'sbox_cftapps_cluster_lb_cftakstf'
      environment: 'sbox_cft_akstf'
      component: 'cftapps_cluster_lb_cftakstf'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/cftapps_cluster_lb_cftakstf modules/app-gateway-module environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: true

    - deployment: 'sbox_cftapps_cluster_lb_backend_cftakstf'
      environment: 'sbox_cft_akstf'
      component: 'cftapps_cluster_lb_backend_cftakstf'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/cftapps_cluster_lb_backend_cftakstf modules/app-gateway-module-backend environments/sbox/backend_lb_config.yaml environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: true

    - deployment: 'sbox_shutter'
      environment: 'sbox'
      component: 'shutter'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/shutter modules/shutter_page environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'sbox_private_dns'
      environment: 'sbox'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-sbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      files_list: 'components/cftapps_private_dns environments/sbox/backend_lb_config.yaml environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'ptl_dynatrace_activegate'
      environment: 'ptl'
      component: 'dynatrace_activegate'
      service_connection: 'DTS-CFTPTL-INTSVC'
      storage_account_rg: 'core-infra-intsvc-rg'
      storage_account_name: 'cftptlintsvc'
      dependsOn: 'Precheck'
      files_list: 'components/dynatrace_activegate modules/dynatrace-activegate environments/sbox/sbox.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'ithc_cftapps_cluster_lb'
      environment: 'ithc'
      component: 'cftapps_cluster_lb'
      service_connection: 'dcd-cftapps-ithc'
      storage_account_rg: 'core-infra-ithc-rg'
      storage_account_name: 'cftappsithc'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb modules/app-gateway-module environments/ithc/ithc.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'ithc_cftapps_cluster_lb_backend'
      environment: 'ithc'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-ithc'
      storage_account_rg: 'core-infra-ithc-rg'
      storage_account_name: 'cftappsithc'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/ithc/backend_lb_config.yaml environments/ithc/ithc.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'ithc_private_dns'
      environment: 'ithc'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-ithc'
      storage_account_rg: 'core-infra-ithc-rg'
      storage_account_name: 'cftappsithc'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_private_dns environments/ithc/backend_lb_config.yaml environments/ithc/ithc.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'demo_cftapps_cluster_lb_backend'
      environment: 'demo'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-demo'
      storage_account_rg: 'core-infra-demo-rg'
      storage_account_name: 'cftappsdemo'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/demo/backend_lb_config.yaml environments/demo/demo.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'demo_private_dns'
      environment: 'demo'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-demo'
      storage_account_rg: 'core-infra-demo-rg'
      storage_account_name: 'cftappsdemo'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_private_dns environments/demo/backend_lb_config.yaml environments/demo/demo.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'test_cftapps_cluster_lb'
      environment: 'test'
      component: 'cftapps_cluster_lb'
      service_connection: 'dcd-cftapps-test'
      storage_account_rg: 'core-infra-test-rg'
      storage_account_name: 'cftappstest'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb modules/app-gateway-module environments/test/test.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'test_cftapps_cluster_lb_backend'
      environment: 'test'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-test'
      storage_account_rg: 'core-infra-test-rg'
      storage_account_name: 'cftappstest'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/test/backend_lb_config.yaml environments/test/test.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'test_cftapps_private_dns'
      environment: 'test'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-test'
      storage_account_rg: 'core-infra-test-rg'
      storage_account_name: 'cftappstest'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_private_dns environments/test/backend_lb_config.yaml environments/test/test.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'stg_cftapps_cluster_lb'
      environment: 'stg'
      component: 'cftapps_cluster_lb'
      service_connection: 'dcd-cftapps-stg'
      storage_account_rg: 'core-infra-stg-rg'
      storage_account_name: 'cftappsstg'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb modules/app-gateway-module environments/stg/stg.tfvars environments/variables.tf'
      alwaysApply: true

    - deployment: 'stg_cftapps_cluster_lb_backend'
      environment: 'stg'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-stg'
      storage_account_rg: 'core-infra-stg-rg'
      storage_account_name: 'cftappsstg'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/stg/backend_lb_config.yaml environments/stg/stg.tfvars environments/variables.tf'
      alwaysApply: true

    - deployment: 'stg_private_dns'
      environment: 'stg'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-stg'
      storage_account_rg: 'core-infra-stg-rg'
      storage_account_name: 'cftappsstg'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_private_dns environments/stg/backend_lb_config.yaml environments/stg/stg.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'prod_cftapps_cluster_lb'
      environment: 'prod'
      component: 'cftapps_cluster_lb'
      service_connection: 'dcd-cftapps-prod'
      storage_account_rg: 'core-infra-prod-rg'
      storage_account_name: 'cftappsprod'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb modules/app-gateway-module environments/prod/prod.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'prod_cftapps_cluster_lb_backend'
      environment: 'prod'
      component: 'cftapps_cluster_lb_backend'
      service_connection: 'dcd-cftapps-prod'
      storage_account_rg: 'core-infra-prod-rg'
      storage_account_name: 'cftappsprod'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_cluster_lb_backend modules/app-gateway-module-backend environments/prod/backend_lb_config.yaml environments/prod/prod.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'prod_shutter'
      environment: 'prod'
      component: 'shutter'
      service_connection: 'dcd-cftapps-prod'
      storage_account_rg: 'core-infra-prod-rg'
      storage_account_name: 'cftappsprod'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/shutter modules/shutter_page environments/prod/prod.tfvars environments/variables.tf'
      alwaysApply: false

    - deployment: 'prod_private_dns'
      environment: 'prod'
      component: 'cftapps_private_dns'
      service_connection: 'dcd-cftapps-prod'
      storage_account_rg: 'core-infra-prod-rg'
      storage_account_name: 'cftappsprod'
      dependsOn: 'sbox_cftapps_cluster_lb'
      files_list: 'components/cftapps_private_dns environments/prod/backend_lb_config.yaml environments/prod/prod.tfvars environments/variables.tf'
      alwaysApply: false


stages:
  - stage: Precheck
    jobs:
      - job: Validate
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        pool:
          vmImage: ${{ variables.agentPool }}
        steps:
        - task: TerraformInstaller@0
          displayName: Terraform install
          inputs:
            terraformVersion: ${{ variables.terraformVersion }}
        - task: AzureKeyVault@1
          displayName: Retrieve keyvault secret for ADO token
          inputs:
            ConnectedServiceName: azurerm-sandbox
            keyVaultName: infra-vault-nonprod
            secretsFilter: 'azure-devops-token'
            runAsPreJob: false
        - task: Bash@3
          displayName: Prevent parallel run
          env:
            thisbuild: $(Build.BuildId)
            pipelinedefinition: $(System.DefinitionId)
            azuredevopstoken: $(azure-devops-token)
          inputs:
            filePath: pipeline-scripts/builds-check.sh
        - task: PowerShell@2
          displayName: Run tests
          inputs:
            targetType: 'filePath'
            filePath: $(System.DefaultWorkingDirectory)/pipeline-scripts/pester-tests.ps1
            pwsh: true
        - task: PublishTestResults@2
          displayName: 'Publish Test Results **/TEST-*.xml'
          inputs:
            testResultsFormat: NUnit
            failTaskOnFailedTests: true
          condition: always()

  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - template: pipeline-templates/terraform.yaml
          parameters:
            environment: ${{ deployment.environment }}
            component: ${{ deployment.component }}
            service_connection: ${{ deployment.service_connection }}
            storage_account_rg: ${{ deployment.storage_account_rg }}
            storage_account_name: ${{ deployment.storage_account_name }}
            build: ${{ variables.build }}
            terraformVersion: ${{ variables.terraformVersion }}
            timeoutInMinutes: ${{ variables.timeoutInMinutes }}
            pool:
              vmImage: ${{ variables.agentPool }}
            files_list: ${{ deployment.files_list }}
            alwaysApply: ${{ deployment.alwaysApply }}
            product: $(product)
