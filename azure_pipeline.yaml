# Docs:
# https://aka.ms/yaml

trigger:
  batch: true
  branches:
    include:
    - master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: 'ubuntu-latest'
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: cft-platform
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
    - plan
    - apply
    - destroy

  - name: environment_components
    type: object
    default:
    - deployment: 'sbox_frontendappgateway'
      environment: 'sbox'
      component: 'frontendappgateway'
      service_connection: 'DCD-CFT-Sandbox'
      storage_account_rg: 'core-infra-sbox-rg'
      storage_account_name: 'cftappssbox'
      dependsOn: 'Precheck'
      pipeline_tests: false

    # - deployment: 'sbox_global'
    #   environment: 'sbox'
    #   component: 'global'
    #   service_connection: 'dcd-cftapps-sbox'
    #   storage_account_rg: 'core-infra-sbox-rg'
    #   storage_account_name: 'cftappssbox'
    #   dependsOn: 'Precheck'
    #   pipeline_tests: true

#     - deployment: 'sbox_backendappgateway'
#       environment: 'sbox'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-sbox'
#       storage_account_rg: 'core-infra-sbox-rg'
#       storage_account_name: 'cftappssbox'
#       dependsOn: 'Precheck'
#       pipeline_tests: false

#     - deployment: 'sbox_shutter_webapp'
#       environment: 'sbox'
#       component: 'shutter_static_webapp'
#       service_connection: 'dcd-cftapps-sbox'
#       storage_account_rg: 'core-infra-sbox-rg'
#       storage_account_name: 'cftappssbox'
#       dependsOn: 'Precheck'
#       pipeline_tests: false

#     - deployment: 'sbox_private_dns'
#       environment: 'sbox'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-sbox'
#       storage_account_rg: 'core-infra-sbox-rg'
#       storage_account_name: 'cftappssbox'
#       dependsOn: 'Precheck'
#       pipeline_tests: false

#     - deployment: 'sbox_apim'
#       environment: 'sbox'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-sbox'
#       storage_account_rg: 'core-infra-sbox-rg'
#       storage_account_name: 'cftappssbox'
#       dependsOn: 'Precheck'
#       pipeline_tests: true

#     - deployment: 'sbox_apim_appgw'
#       environment: 'sbox'
#       component: 'apim-appgw'
#       service_connection: 'HMCTS-HUB-SBOX-INTSVC'
#       storage_account_rg: 'core-infra-sbox-rg'
#       storage_account_name: 'cftappssbox'
#       dependsOn: 'Precheck'
#       pipeline_tests: true

#     - deployment: 'ptl_dynatrace_activegate'
#       environment: 'ptl'
#       component: 'dynatrace_activegate'
#       service_connection: 'DTS-CFTPTL-INTSVC'
#       storage_account_rg: 'core-infra-intsvc-rg'
#       storage_account_name: 'cftptlintsvc'
#       dependsOn: 'Precheck'

#     - deployment: 'dev_global'
#       environment: 'dev'
#       component: 'global'
#       service_connection: 'dcd-cftapps-dev'
#       storage_account_rg: 'core-infra-dev-rg'
#       storage_account_name: 'cftappsdev'
#       dependsOn: 'sbox_global'

#     - deployment: 'ithc_frontendappgateway'
#       environment: 'ithc'
#       component: 'frontendappgateway'
#       service_connection: 'dcd-cftapps-ithc'
#       storage_account_rg: 'core-infra-ithc-rg'
#       storage_account_name: 'cftappsithc'
#       dependsOn: 'sbox_frontendappgateway'
#       pipeline_tests: true

#     - deployment: 'ithc_backendappgateway'
#       environment: 'ithc'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-ithc'
#       storage_account_rg: 'core-infra-ithc-rg'
#       storage_account_name: 'cftappsithc'
#       dependsOn: 'sbox_backendappgateway'
#       pipeline_tests: true

#     - deployment: 'ithc_global'
#       environment: 'ithc'
#       component: 'global'
#       service_connection: 'dcd-cftapps-ithc'
#       storage_account_rg: 'core-infra-ithc-rg'
#       storage_account_name: 'cftappsithc'
#       pipeline_tests: true
#       dependsOn: 'sbox_global'

#     - deployment: 'ithc_private_dns'
#       environment: 'ithc'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-ithc'
#       storage_account_rg: 'core-infra-ithc-rg'
#       storage_account_name: 'cftappsithc'
#       dependsOn: 'sbox_private_dns'
#       pipeline_tests: true

#     - deployment: 'ithc_apim'
#       environment: 'ithc'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-ithc'
#       storage_account_rg: 'core-infra-ithc-rg'
#       storage_account_name: 'cftappsithc'
#       dependsOn: 'sbox_apim'

#     - deployment: 'demo_global'
#       environment: 'demo'
#       component: 'global'
#       service_connection: 'dcd-cftapps-demo'
#       storage_account_rg: 'core-infra-demo-rg'
#       storage_account_name: 'cftappsdemo'
#       dependsOn: 'sbox_global'

#     - deployment: 'demo_frontendappgateway'
#       environment: 'demo'
#       component: 'frontendappgateway'
#       service_connection: 'dcd-cftapps-demo'
#       storage_account_rg: 'core-infra-demo-rg'
#       storage_account_name: 'cftappsdemo'
#       dependsOn: 'sbox_frontendappgateway'

#     - deployment: 'demo_backendappgateway'
#       environment: 'demo'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-demo'
#       storage_account_rg: 'core-infra-demo-rg'
#       storage_account_name: 'cftappsdemo'
#       dependsOn: 'sbox_backendappgateway'

#     - deployment: 'demo_private_dns'
#       environment: 'demo'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-demo'
#       storage_account_rg: 'core-infra-demo-rg'
#       storage_account_name: 'cftappsdemo'
#       dependsOn: 'sbox_private_dns'

#     - deployment: 'demo_apim'
#       environment: 'demo'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-demo'
#       storage_account_rg: 'core-infra-demo-rg'
#       storage_account_name: 'cftappsdemo'
#       dependsOn: 'sbox_apim'
#       pipeline_tests: true

#     - deployment: 'test_frontendappgateway'
#       environment: 'test'
#       component: 'frontendappgateway'
#       service_connection: 'dcd-cftapps-test'
#       storage_account_rg: 'core-infra-test-rg'
#       storage_account_name: 'cftappstest'
#       dependsOn: 'sbox_frontendappgateway'
#       pipeline_tests: true

#     - deployment: 'test_backendappgateway'
#       environment: 'test'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-test'
#       storage_account_rg: 'core-infra-test-rg'
#       storage_account_name: 'cftappstest'
#       dependsOn: 'sbox_backendappgateway'
#       pipeline_tests: true

#     - deployment: 'test_cftapps_private_dns'
#       environment: 'test'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-test'
#       storage_account_rg: 'core-infra-test-rg'
#       storage_account_name: 'cftappstest'
#       dependsOn: 'sbox_private_dns'
#       pipeline_tests: true

#     - deployment: 'test_apim'
#       environment: 'test'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-test'
#       storage_account_rg: 'core-infra-test-rg'
#       storage_account_name: 'cftappstest'
#       dependsOn: 'sbox_apim'
#       pipeline_tests: true

#     - deployment: 'perftest_global'
#       environment: 'test'
#       component: 'global'
#       service_connection: 'dcd-cftapps-test'
#       storage_account_rg: 'core-infra-test-rg'
#       storage_account_name: 'cftappstest'
#       pipeline_tests: true
#       dependsOn: 'sbox_global'

#     - deployment: 'stg_private_dns'
#       environment: 'stg'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-stg'
#       storage_account_rg: 'core-infra-stg-rg'
#       storage_account_name: 'cftappsstg'
#       dependsOn: 'sbox_private_dns'
#       pipeline_tests: true

#     - deployment: 'stg_apim'
#       environment: 'stg'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-stg'
#       storage_account_rg: 'core-infra-stg-rg'
#       storage_account_name: 'cftappsstg'
#       dependsOn: 'sbox_apim'
#       pipeline_tests: true

#     - deployment: 'stg_frontendappgateway'
#       environment: 'stg'
#       component: 'frontendappgateway'
#       service_connection: 'dcd-cftapps-stg'
#       storage_account_rg: 'core-infra-stg-rg'
#       storage_account_name: 'cftappsstg'
#       dependsOn: 'sbox_frontendappgateway'
#       pipeline_tests: true

#     - deployment: 'stg_backendappgateway'
#       environment: 'stg'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-stg'
#       storage_account_rg: 'core-infra-stg-rg'
#       storage_account_name: 'cftappsstg'
#       dependsOn: 'sbox_backendappgateway'
#       pipeline_tests: true

#     - deployment: 'aat_global'
#       environment: 'stg'
#       component: 'global'
#       service_connection: 'dcd-cftapps-stg'
#       storage_account_rg: 'core-infra-stg-rg'
#       storage_account_name: 'cftappsstg'
#       pipeline_tests: true
#       dependsOn: 'sbox_global'

#     - deployment: 'prod_shutter_webapp'
#       environment: 'prod'
#       component: 'shutter_static_webapp'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       dependsOn: 'sbox_shutter_webapp'

#     - deployment: 'prod_frontendappgateway'
#       environment: 'prod'
#       component: 'frontendappgateway'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       dependsOn: 'sbox_frontendappgateway'
#       pipeline_tests: false

#     - deployment: 'prod_backendappgateway'
#       environment: 'prod'
#       component: 'backendappgateway'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       dependsOn: 'sbox_backendappgateway'
#       pipeline_tests: false

#     - deployment: 'prod_private_dns'
#       environment: 'prod'
#       component: 'cftapps_private_dns'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       dependsOn: 'sbox_private_dns'
#       pipeline_tests: false

#     - deployment: 'prod_apim'
#       environment: 'prod'
#       component: 'apim'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       dependsOn: 'sbox_apim'
#       pipeline_tests: true

#     - deployment: 'prod_global'
#       environment: 'prod'
#       component: 'global'
#       service_connection: 'dcd-cftapps-prod'
#       storage_account_rg: 'core-infra-prod-rg'
#       storage_account_name: 'cftappsprod'
#       pipeline_tests: true
#       dependsOn: 'sbox_global'

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-sp-token'
              serviceConnection: 'azurerm-sandbox'
              overrideAction: ${{ parameters.overrideAction }}


  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}

#         - job: PipelineTests
#           pool:
#             vmImage: ${{ variables.agentPool }}
#           timeoutInMinutes: ${{ variables.timeoutInMinutes }}
#           dependsOn: TerraformPlanApply
#           condition: and(succeeded(), eq(variables['isMain'], true), eq('${{ deployment.pipeline_tests }}', 'true'))
#           steps:
#             - template: steps/pipeline-tests-jest.yaml@cnp-azuredevops-libraries
#               parameters:
#                 workingDirectory: $(Pipeline.Workspace)/s/azure-platform-terraform/scripts
#                 junit_output_dir: $(Pipeline.Workspace)/s/azure-platform-terraform/environments/${{ deployment.environment }}/junit
#                 environment: ${{ deployment.environment }}
#                 product: ${{ variables.product }}
#                 test_title: '${{ deployment.environment }}_${{ deployment.component }}'
#                 ${{ if eq(deployment.component, 'apim') }}:
#                   test_pattern: apim.test.ts
#                 ${{ else }}:
#                   test_pattern: pipeline.test.ts

