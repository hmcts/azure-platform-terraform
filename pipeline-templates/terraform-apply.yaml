variables:
  ${{ if eq(parameters['service_connection'], Null) }}:
    service_connection: 'dcd-cftapps-${{ parameters.environment }}'
  ${{ if ne(parameters['service_connection'], Null) }}:
    service_connection: '${{ parameters.service_connection }}'
  ${{ if eq(parameters['storage_account_rg'], Null) }}:
    storage_account_rg: 'core-infra-${{ parameters.environment }}-rg'
  ${{ if ne(parameters['storage_account_rg'], Null) }}:
    storage_account_rg: '${{ parameters.storage_account_rg }}'
  ${{ if eq(parameters['storage_account_name'], Null) }}:
    storage_account_name: 'cftapps${{ parameters.environment }}'
  ${{ if ne(parameters['storage_account_name'], Null) }}:
    storage_account_name: '${{ parameters.storage_account_name }}'

jobs:
  - deployment: Deploy
    pool:
      vmImage: ${{ parameters.agentPool }}
    environment: ${{ parameters.environment }}
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
            - download: current
              displayName: 'Download artifacts'
              artifact: drop
            - download: current
              displayName: 'Download tfplan'
              artifact: ${{ parameters.environment }}${{ parameters.component }}${{ parameters.build }}plan
            - task: CopyFiles@2
              inputs:
                sourceFolder: '$(Pipeline.Workspace)/${{ parameters.environment }}${{ parameters.component }}${{ parameters.build }}plan'
                targetFolder: '$(Pipeline.Workspace)/drop/components/${{ parameters.component }}'
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: ${{ parameters.terraformVersion }}
            - task: TerraformCLI@0
              displayName: Init - ${{ parameters.environment }} - ${{ parameters.component }}
              inputs:
                command: 'init'
                backendType: 'azurerm'
                ensureBackend: true
                backendServiceArm: '${{ variables.service_connection }}'
                backendAzureRmResourceGroupName: '${{ variables.storage_account_rg }}'
                backendAzureRmStorageAccountName: '${{ variables.storage_account_name }}'
                backendAzureRmResourceGroupLocation: 'uksouth'
                backendAzureRmContainerName: 'tfstate'
                backendAzureRmKey: '${{ parameters.component }}.tfstate'
                workingDirectory: '$(Pipeline.Workspace)/drop/components/${{ parameters.component }}'
              continueOnError: true
            - task: TerraformCLI@0
              displayName: Apply - ${{ parameters.environment }} - ${{ parameters.component }}
              inputs:
                command: 'apply'
                commandOptions: '${{ parameters.environment }}${{ parameters.component }}${{ parameters.build }}plan'
                environmentServiceName: '${{ variables.service_connection }}'
                workingDirectory: '$(Pipeline.Workspace)/drop/components/${{ parameters.component }}'